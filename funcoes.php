<?php
	function get_z ($nivel) {
        if ($nivel == 95) return 1.96;
        else if ($nivel == 99) return 2.58;
    }

    function get_p ($nivel) {
        if ($nivel == 95) return 0.95;
        else if ($nivel == 99) return 0.99;
    }

    function get_z_tabela ($probabilidade, $tipo) {
    	if ($tipo == "alfa") $prob = 1 - ($probabilidade/100)/2;		//alfa - z normal
    	else if ($probabilidade <= 50) $prob = 1 - $probabilidade/100;	//beta <= 50
    	else $prob = $probabilidade/100;								//beta > 50

		$matriz_z = array(
			array(	0.0 , 0.0	 , 0.01	  , 0.02   , 0.03 	, 0.04	 , 0.05	  , 0.06   , 0.07	, 0.08	 , 0.09	  ),
		    array(	0.0 , 0.5000 , 0.5040 , 0.5080 , 0.5120 , 0.5160 , 0.5199 , 0.5239 , 0.5279 , 0.5319 , 0.5359 ),
		    array(	0.1 , 0.5398 , 0.5438 , 0.5478 , 0.5517 , 0.5557 , 0.5596 , 0.5636 , 0.5675 , 0.5714 , 0.5753 ),
		    array(	0.2 , 0.5793 , 0.5832 , 0.5871 , 0.5910 , 0.5948 , 0.5987 , 0.6026 , 0.6064 , 0.6103 , 0.6141 ),
		    array(	0.3 , 0.6179 , 0.6217 , 0.6255 , 0.6293 , 0.6331 , 0.6368 , 0.6406 , 0.6443 , 0.6480 , 0.6517 ),
		    array(	0.4 , 0.6554 , 0.6591 , 0.6628 , 0.6664 , 0.6700 , 0.6736 , 0.6772 , 0.6808 , 0.6844 , 0.6879 ),
		    array(	0.5 , 0.6915 , 0.6950 , 0.6985 , 0.7019 , 0.7054 , 0.7088 , 0.7123 , 0.7157 , 0.7190 , 0.7224 ),
		    array(	0.6 , 0.7257 , 0.7291 , 0.7324 , 0.7357 , 0.7389 , 0.7422 , 0.7454 , 0.7486 , 0.7517 , 0.7549 ),
		    array(	0.7 , 0.7580 , 0.7611 , 0.7642 , 0.7673 , 0.7704 , 0.7734 , 0.7764 , 0.7794 , 0.7823 , 0.7852 ),
		    array(	0.8 , 0.7881 , 0.7910 , 0.7939 , 0.7967 , 0.7995 , 0.8023 , 0.8051 , 0.8078 , 0.8106 , 0.8133 ),
		    array(	0.9 , 0.8159 , 0.8186 , 0.8212 , 0.8238 , 0.8264 , 0.8289 , 0.8315 , 0.8340 , 0.8365 , 0.8389 ),
		    array(	1.0 , 0.8413 , 0.8438 , 0.8461 , 0.8485 , 0.8508 , 0.8531 , 0.8554 , 0.8577 , 0.8599 , 0.8621 ),
		    array(	1.1 , 0.8643 , 0.8665 , 0.8686 , 0.8708 , 0.8729 , 0.8749 , 0.8770 , 0.8790 , 0.8810 , 0.8830 ),
		    array(	1.2 , 0.8849 , 0.8869 , 0.8888 , 0.8907 , 0.8925 , 0.8944 , 0.8962 , 0.8980 , 0.8997 , 0.9015 ),
		    array(	1.3 , 0.9032 , 0.9049 , 0.9066 , 0.9082 , 0.9099 , 0.9115 , 0.9131 , 0.9147 , 0.9162 , 0.9177 ),
		    array(	1.4 , 0.9192 , 0.9207 , 0.9222 , 0.9236 , 0.9251 , 0.9265 , 0.9279 , 0.9292 , 0.9306 , 0.9319 ),
		    array(	1.5 , 0.9332 , 0.9345 , 0.9357 , 0.9370 , 0.9382 , 0.9394 , 0.9406 , 0.9418 , 0.9429 , 0.9441 ),
		    array(	1.6 , 0.9452 , 0.9463 , 0.9474 , 0.9484 , 0.9495 , 0.9505 , 0.9515 , 0.9525 , 0.9535 , 0.9545 ),
		    array(	1.7 , 0.9554 , 0.9564 , 0.9573 , 0.9582 , 0.9591 , 0.9599 , 0.9608 , 0.9616 , 0.9625 , 0.9633 ),
		    array(	1.8 , 0.9641 , 0.9649 , 0.9656 , 0.9664 , 0.9671 , 0.9678 , 0.9686 , 0.9693 , 0.9699 , 0.9706 ),
		    array(	1.9 , 0.9713 , 0.9719 , 0.9726 , 0.9732 , 0.9738 , 0.9744 , 0.9750 , 0.9756 , 0.9761 , 0.9767 ),
		    array(	2.0 , 0.9772 , 0.9778 , 0.9783 , 0.9788 , 0.9793 , 0.9798 , 0.9803 , 0.9808 , 0.9812 , 0.9817 ),
		    array(	2.1 , 0.9821 , 0.9826 , 0.9830 , 0.9834 , 0.9838 , 0.9842 , 0.9846 , 0.9850 , 0.9854 , 0.9857 ),
		    array(	2.2 , 0.9861 , 0.9864 , 0.9868 , 0.9871 , 0.9875 , 0.9878 , 0.9881 , 0.9884 , 0.9887 , 0.9890 ),
		    array(	2.3 , 0.9893 , 0.9896 , 0.9898 , 0.9901 , 0.9904 , 0.9906 , 0.9909 , 0.9911 , 0.9913 , 0.9916 ),
		    array(	2.4 , 0.9918 , 0.9920 , 0.9922 , 0.9925 , 0.9927 , 0.9929 , 0.9931 , 0.9932 , 0.9934 , 0.9936 ),
		    array(	2.5 , 0.9938 , 0.9940 , 0.9941 , 0.9943 , 0.9945 , 0.9946 , 0.9948 , 0.9949 , 0.9951 , 0.9952 ),
		    array(	2.6 , 0.9953 , 0.9955 , 0.9956 , 0.9957 , 0.9959 , 0.9960 , 0.9961 , 0.9962 , 0.9963 , 0.9964 ),
		    array(	2.7 , 0.9965 , 0.9966 , 0.9967 , 0.9968 , 0.9969 , 0.9970 , 0.9971 , 0.9972 , 0.9973 , 0.9974 ),
		    array(	2.8 , 0.9974 , 0.9975 , 0.9976 , 0.9977 , 0.9977 , 0.9978 , 0.9979 , 0.9979 , 0.9980 , 0.9981 ),
		    array(	2.9 , 0.9981 , 0.9982 , 0.9982 , 0.9983 , 0.9984 , 0.9984 , 0.9985 , 0.9985 , 0.9986 , 0.9986 ),
		    array(	3.0 , 0.9987 , 0.9987 , 0.9987 , 0.9988 , 0.9988 , 0.9989 , 0.9989 , 0.9989 , 0.9990 , 0.9990 ),
		    array(	3.1 , 0.9990 , 0.9991 , 0.9991 , 0.9991 , 0.9992 , 0.9992 , 0.9992 , 0.9992 , 0.9993 , 0.9993 ),
		    array(	3.2 , 0.9993 , 0.9993 , 0.9994 , 0.9994 , 0.9994 , 0.9994 , 0.9994 , 0.9995 , 0.9995 , 0.9995 ),
		    array(	3.3 , 0.9995 , 0.9995 , 0.9995 , 0.9996 , 0.9996 , 0.9996 , 0.9996 , 0.9996 , 0.9996 , 0.9997 ),
		    array(	3.4 , 0.9997 , 0.9997 , 0.9997 , 0.9997 , 0.9997 , 0.9997 , 0.9997 , 0.9997 , 0.9997 , 0.9998 ),
		    array(	3.5 , 0.9998 , 0.9998 , 0.9998 , 0.9998 , 0.9998 , 0.9998 , 0.9998 , 0.9998 , 0.9998 , 0.9998 ),
		    array(	3.6 , 0.9998 , 0.9998 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 ),
		    array(	3.7 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 ),
		    array(	3.8 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 , 0.9999 ),
		    array(	3.9 , 1.0000 , 1.0000 , 1.0000 , 1.0000 , 1.0000 , 1.0000 , 1.0000 , 1.0000 , 1.0000 , 1.0000 )
		);

		$linha = 1;
		$coluna = 1;
		$col_ant = 1;
		$lin_ant = 1;
		for($linha = 1; $linha < sizeof($matriz_z)-1; $linha++) {
			for($coluna = 1; $coluna < sizeof($matriz_z[$linha])-1; $coluna++) {
				if ($prob <= $matriz_z[$linha][$coluna]) break;
			}
			if ($prob <= $matriz_z[$linha][$coluna]) {
				//comparar com o anterior
				if ($coluna == 1 && $linha != 1) {
					$col_ant = 10; //ultima coluna da linha anterior
					$lin_ant = $linha - 1;
				}
				else if ($linha != 1) {
					$col_ant = $coluna-1; //coluna anterior
					$lin_ant = $linha;
				}
				//se abs(atual) > abs(anterior) return anterior
				if (abs($prob - $matriz_z[$linha][$coluna]) > abs($prob - $matriz_z[$lin_ant][$col_ant])) {
					$linha = $lin_ant;
					$coluna = $col_ant;
				}
				break;
			}
		}

		if ($tipo == "beta" && $probabilidade > 50) return (-1 * ($matriz_z[$linha][0] + $matriz_z[0][$coluna]));
		else return ($matriz_z[$linha][0] + $matriz_z[0][$coluna]);
    }
    
	function get_t ($probabilidade, $grau_liberdade) {
		if ($probabilidade == 0.95) $coluna = 1;
		else $coluna = 2;

		$matriz_t = array(
	        array(	1		,	12.70620473	,	63.65674115	),
			array(	2		,	4.30265273	,	9.9248432	),
			array(	3		,	3.182446305	,	5.840909309	),
			array(	4		,	2.776445105	,	4.604094871	),
			array(	5		,	2.570581835	,	4.032142983	),
			array(	6		,	2.446911846	,	3.70742802	),
			array(	7		,	2.364624251	,	3.499483297	),
			array(	8		,	2.306004133	,	3.355387331	),
			array(	9		,	2.262157158	,	3.249835541	),
			array(	10		,	2.228138842	,	3.169272672	),
			array(	11		,	2.200985159	,	3.105806514	),
			array(	12		,	2.178812827	,	3.054539586	),
			array(	13		,	2.160368652	,	3.012275833	),
			array(	14		,	2.144786681	,	2.976842734	),
			array(	15		,	2.131449536	,	2.946712883	),
			array(	16		,	2.119905285	,	2.920781621	),
			array(	17		,	2.109815559	,	2.898230518	),
			array(	18		,	2.100922037	,	2.878440471	),
			array(	19		,	2.09302405	,	2.860934604	),
			array(	20		,	2.085963441	,	2.845339707	),
			array(	21		,	2.079613837	,	2.831359554	),
			array(	22		,	2.073873058	,	2.818756056	),
			array(	23		,	2.068657599	,	2.807335678	),
			array(	24		,	2.063898547	,	2.796939498	),
			array(	25		,	2.059538536	,	2.787435805	),
			array(	26		,	2.055529418	,	2.778714523	),
			array(	27		,	2.051830493	,	2.770682946	),
			array(	28		,	2.048407115	,	2.763262442	),
			array(	29		,	2.045229611	,	2.756385902	),
			array(	30		,	2.042272449	,	2.749995652	),
			array(	31		,	2.039513438	,	2.744041917	),
			array(	32		,	2.036933334	,	2.73848148	),
			array(	33		,	2.034515287	,	2.73327664	),
			array(	34		,	2.032244498	,	2.728394364	),
			array(	35		,	2.030107915	,	2.723805586	),
			array(	36		,	2.028093987	,	2.719484627	),
			array(	37		,	2.026192447	,	2.715408718	),
			array(	38		,	2.024394147	,	2.711557598	),
			array(	39		,	2.022690901	,	2.707913179	),
			array(	40		,	2.02107537	,	2.704459262	),
			array(	41		,	2.019540948	,	2.701181298	),
			array(	42		,	2.018081679	,	2.69806618	),
			array(	43		,	2.016692173	,	2.695102073	),
			array(	44		,	2.015367547	,	2.692278259	),
			array(	45		,	2.014103359	,	2.689585012	),
			array(	46		,	2.012895567	,	2.687013484	),
			array(	47		,	2.01174048	,	2.68455561	),
			array(	48		,	2.010634722	,	2.682204018	),
			array(	49		,	2.009575199	,	2.679951964	),
			array(	50		,	2.008559072	,	2.677793261	),
			array(	51		,	2.007583728	,	2.675722224	),
			array(	52		,	2.006646761	,	2.67373362	),
			array(	53		,	2.005745949	,	2.671822625	),
			array(	54		,	2.004879275	,	2.669984784	),
			array(	55		,	2.004044769	,	2.668215976	),
			array(	56		,	2.003240704	,	2.666512385	),
			array(	57		,	2.002465444	,	2.664870469	),
			array(	58		,	2.001717468	,	2.66328694	),
			array(	59		,	2.000995361	,	2.661758738	),
			array(	60		,	2.000297804	,	2.660283014	),
			array(	61		,	1.999623567	,	2.658857111	),
			array(	62		,	1.998971498	,	2.657478549	),
			array(	63		,	1.998340522	,	2.656145008	),
			array(	64		,	1.997729633	,	2.65485432	),
			array(	65		,	1.997137887	,	2.653604451	),
			array(	66		,	1.996564396	,	2.652393497	),
			array(	67		,	1.996008331	,	2.651219666	),
			array(	68		,	1.995468907	,	2.650081279	),
			array(	69		,	1.99494539	,	2.648976754	),
			array(	70		,	1.994437086	,	2.647904603	),
			array(	71		,	1.993943341	,	2.646863423	),
			array(	72		,	1.993463539	,	2.645851891	),
			array(	73		,	1.992997097	,	2.64486876	),
			array(	74		,	1.992543466	,	2.643912849	),
			array(	75		,	1.992102124	,	2.642983043	),
			array(	76		,	1.991672579	,	2.642078309	),
			array(	77		,	1.991254363	,	2.641197607	),
			array(	78		,	1.990847036	,	2.64034001	),
			array(	79		,	1.990450177	,	2.639504623	),
			array(	80		,	1.990063387	,	2.638690591	),
			array(	81		,	1.989686288	,	2.637897108	),
			array(	82		,	1.989318521	,	2.637123405	),
			array(	83		,	1.988959743	,	2.636368751	),
			array(	84		,	1.988609629	,	2.635632452	),
			array(	85		,	1.988267868	,	2.634913847	),
			array(	86		,	1.987934166	,	2.634212304	),
			array(	87		,	1.987608241	,	2.633527223	),
			array(	88		,	1.987289823	,	2.632858032	),
			array(	89		,	1.986978657	,	2.632204185	),
			array(	90		,	1.986674497	,	2.631565159	),
			array(	91		,	1.98637711	,	2.630940457	),
			array(	92		,	1.986086272	,	2.630329602	),
			array(	93		,	1.985801768	,	2.629732138	),
			array(	94		,	1.985523395	,	2.629147631	),
			array(	95		,	1.985250956	,	2.628575664	),
			array(	96		,	1.984984263	,	2.628015836	),
			array(	97		,	1.984723136	,	2.627467767	),
			array(	98		,	1.984467404	,	2.626931088	),
			array(	99		,	1.9842169	,	2.62640545	),
			array(	100		,	1.983971466	,	2.625890514	),
			array(	105		,	1.982815217	,	2.623465488	),
			array(	110		,	1.981765221	,	2.621264535	),
			array(	115		,	1.980807476	,	2.619257971	),
			array(	120		,	1.979930381	,	2.617421135	),
			array(	125		,	1.979124084	,	2.615733366	),
			array(	130		,	1.978380378	,	2.614177227	),
			array(	135		,	1.977692248	,	2.612737896	),
			array(	140		,	1.977053689	,	2.611402699	),
			array(	145		,	1.976459531	,	2.610160729	),
			array(	150		,	1.975905298	,	2.609002553	),
			array(	155		,	1.975387096	,	2.607919966	),
			array(	160		,	1.974901524	,	2.606905803	),
			array(	165		,	1.974445593	,	2.605953776	),
			array(	170		,	1.974016669	,	2.605058344	),
			array(	175		,	1.973612422	,	2.604214607	),
			array(	180		,	1.973230782	,	2.603418213	),
			array(	185		,	1.972869904	,	2.602665286	),
			array(	190		,	1.972528138	,	2.601952364	),
			array(	195		,	1.972204006	,	2.601276338	),
			array(	200		,	1.971896178	,	2.600634419	),
			array(	225		,	1.970563339	,	2.597856192	),
			array(	250		,	1.969498337	,	2.59563761	),
			array(	275		,	1.968627811	,	2.593825046	),
			array(	300		,	1.967902947	,	2.592316388	),
			array(	325		,	1.96729001	,	2.591041116	),
			array(	350		,	1.966764932	,	2.589948962	),
			array(	375		,	1.966310088	,	2.589003128	),
			array(	400		,	1.965912268	,	2.588176054	),
			array(	450		,	1.965249585	,	2.5867987	),
			array(	500		,	1.964719754	,	2.585697807	),
			array(	550		,	1.964286464	,	2.584797731	),
			array(	600		,	1.963925532	,	2.584048117	),
			array(	650		,	1.963620283	,	2.583414147	),
			array(	700		,	1.963358671	,	2.582870977	),
			array(	750		,	1.963131995	,	2.582400404	),
			array(	800		,	1.962933697	,	2.581988784	),
			array(	850		,	1.96275876	,	2.581625692	),
			array(	900		,	1.962603286	,	2.581303025	),
			array(	950		,	1.962464198	,	2.581014387	),
			array(	1000	,	1.962339036	,	2.580754664	),
			array(	1500	,	1.961546706	,	2.579110897	),
			array(	2000	,	1.961150776	,	2.578289751	),
			array(	2500	,	1.960913293	,	2.5777973	),
			array(	3000	,	1.960755003	,	2.577469097	),
			array(	4000	,	1.960557176	,	2.577058955	),
			array(	5000	,	1.960438498	,	2.576812928	),
			array(	6000	,	1.960359387	,	2.576648935	),
			array(	7000	,	1.960302883	,	2.576531809	),
			array(	8000	,	1.960260508	,	2.576443971	),
			array(	9000	,	1.96022755	,	2.576375657	),
			array(	10000	,	1.960201185	,	2.576321008	),
			array(	15000	,	1.960122093	,	2.576157073	),
			array(	50000	,	1.960011375	,	2.575927626	)
		);
		$linha = 0;
		while($grau_liberdade > $matriz_t[$linha][0] && $linha < sizeof($matriz_t)-1) {
			$linha = $linha + 1;
		}
		//compara com o grau anterior
		if ($linha > 0 && (abs($grau_liberdade - $matriz_t[$linha][0]) > abs($grau_liberdade - $matriz_t[$linha-1][0]))) {
			$linha = $linha - 1;
		}
		return $matriz_t[$linha][$coluna];
    }
?>